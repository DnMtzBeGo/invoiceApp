// Generated by https://quicktype.io

export interface ITablePageUI {
  size: number;
  index: number;
  total: number;
}

export interface ITableColumn {
  id: string;
  label: string;
  input?: string;
  action?: string;
}

export interface ITableActions {
  id: string;
  label: string;
  icon: string;
  translate: string;
}

export interface ITableSelectingAction {
  type: string;
  data: any;
}

export interface ITableSelectRow {
  showColumnSelection: boolean;
  selectionLimit: number;
  keyPrimaryRow: string;
}

export interface IInvoicesTable {
  columns: ITableColumn[];
  values: Partial<IInvoicesTableItem>[];
  actions: ITableActions[];
  //changingPage: ({ index, size, total }: ITablePageUI) => void;
  selectingAction: ({ type, data }: ITableSelectingAction) => void;
  rowSelected: ($invoice: IInvoicesTableItem) => void;
  selectRow: ITableSelectRow;
}

export interface IInvoicesTableItem {
  _id: string;
  fecha_emision: Date;
  emisor: string;
  receptor: string;
  serie: string;
  tipo: string;
  tipo_de_comprobante: string;
  status: string;
  status_: string;
  subtotal: number;
  total: number;
  plataforma: {
    label: string;
    type: string;
  };
  actions?: any;
  selection_check: boolean;
}

export interface IIndexInvoice {
  _id: string;
  fecha_emision: Date;
  condiciones_de_pago: string;
  forma_de_pago: string;
  subtotal: number;
  descuento: number;
  serie: string;
  moneda: string;
  total: number;
  tipo_de_comprobante: string;
  metodo_de_pago: string;
  lugar_de_expedicion: ILugarDeExpedicion;
  exportacion: string;
  emisor: string;
  receptor: string;
  conceptos: IConcepto[];
  impuestos_totales: IImpuestosTotales;
  complementos: string[];
  carta_porte?: ICartaPorte;
  stamped: boolean;
  status: string;
  error: any[];
  canceled: boolean;
  source: string;
  user_id: string;
  created_at: number;
  notifications: any[];
  documentos_relacionados: any[];
  imported: boolean;
  updated_at: Date;
  invoice_type: string;
  serie_label: string;
  tipo: string;
  plataforma: {
    label: string;
    type: string;
    icon?: string;
  };
  files: {
    xml?: string;
    pdf?: string;
    pdf_driver?: string;
    pdf_cancelado?: string;
    xml_acuse?: string;
  };
  order: string;
  status_: string;
}

export interface ICartaPorte {
  version: number;
  id_ccp: string;
  cve_transporte: string;
  transp_internac: string;
  regimenes_aduaneros: any[];
  total_dist_rec: number;
  ubicaciones: IUbicaciones[];
  mercancias: IMercancias;
  figura_transporte: IFiguraTransporte[];
}

export interface IFiguraTransporte {
  tipo_figura: string;
  rfc_figura: string;
  nombre_figura: string;
  num_licencia: string;
  partes_transporte: IPartesTransporte[];
  domicilio: IDomicilio;
}

export interface IDomicilio {
  calle: string;
  numero_exterior: string;
  pais: string;
  estado: string;
  municipio: string;
  colonia: string;
  codigo_postal: string;
  referencia?: string;
  localidad?: string;
}

export interface IPartesTransporte {
  parte_transporte: string;
}

export interface IMercancias {
  num_total_mercancias: number;
  mercancia: IMercancia[];
  autotransporte: IAutotransporte;
}

export interface IAutotransporte {
  perm_sct: string;
  num_permiso_sct: string;
  identificacion_vehicular: IIdentificacionVehicular;
  seguros: ISeguros;
  remolques: IRemolque[];
}

export interface IIdentificacionVehicular {
  config_vehicular: string;
  placa_v_m: string;
  anio_modelo_v_m: number;
  peso_bruto_vehicular: number;
  _id: string;
}

export interface IRemolque {
  sub_tipo_rem: string;
  placa: string;
  _id: string;
}

export interface ISeguros {
  asegura_resp_civil: string;
  poliza_resp_civil: string;
  _id: string;
}

export interface IMercancia {
  material_peligroso: string;
  cantidad_transporta: any[];
  pedimentos: any[];
  guias_identificacion: any[];
}

export interface IUbicaciones {
  tipo_ubicacion: string;
  fecha_hora_salida_llegada: Date;
  rfc_remitente_destinatario: string;
  nombre_remitente_destinatario: string;
  id_ubicacion: string;
  domicilio: IDomicilio;
  distancia_recorrida?: number;
}

export interface IConcepto {
  nombre: string;
  cve_sat: string;
  cantidad: number;
  unidad_de_medida: string;
  valor_unitario: number;
  descuento: number;
  impuestos: IImpuesto[];
  _id: string;
}

export interface IImpuesto {
  cve_sat: string;
  tipo_factor: string;
  es_retencion: boolean;
  tasa_cuota: number;
  _id: string;
}

export interface IEmisor {
  _id: string;
  rfc: string;
  nombre: string;
  regimen_fiscal: string;
}

export interface IImpuestosTotales {
  total_impuestos_retenidos: number;
  total_impuestos_trasladados: number;
  _id: string;
}

export interface ILugarDeExpedicion {
  rfc: string;
  nombre: string;
  calle: string;
  numero: number;
  colonia: string;
  cp: string;
  pais: string;
  estado: string;
  municipio: string;
  user_id: string;
  _id: string;
}

export interface IReceptor {
  rfc: string;
  nombre: string;
  uso_cfdi: string;
  regimen_fiscal: string;
  direccion: IDireccion;
  _id: string;
}

export interface IDireccion {
  identificador: string;
  calle: string;
  numero: string;
  interior: string;
  pais: string;
  estado: string;
  municipio: string;
  colonia: string;
  cp: string;
  user_id: string;
  _id: string;
}
